// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: models/proto/eventContainer.proto

package com.nicktate.storm;

public final class EventContainerProto {
  private EventContainerProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EventContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.nicktate.EventContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.nicktate.EventContainer.EventType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>optional .com.nicktate.EventContainer.EventType type = 1;</code>
     */
    com.nicktate.storm.EventContainerProto.EventContainer.EventType getType();

    /**
     * <code>optional .com.nicktate.Pageview pageview = 2;</code>
     */
    boolean hasPageview();
    /**
     * <code>optional .com.nicktate.Pageview pageview = 2;</code>
     */
    com.nicktate.storm.PageviewProto.Pageview getPageview();
    /**
     * <code>optional .com.nicktate.Pageview pageview = 2;</code>
     */
    com.nicktate.storm.PageviewProto.PageviewOrBuilder getPageviewOrBuilder();

    /**
     * <code>optional .com.nicktate.Transaction transaction = 3;</code>
     */
    boolean hasTransaction();
    /**
     * <code>optional .com.nicktate.Transaction transaction = 3;</code>
     */
    com.nicktate.storm.TransactionProto.Transaction getTransaction();
    /**
     * <code>optional .com.nicktate.Transaction transaction = 3;</code>
     */
    com.nicktate.storm.TransactionProto.TransactionOrBuilder getTransactionOrBuilder();
  }
  /**
   * Protobuf type {@code com.nicktate.EventContainer}
   */
  public  static final class EventContainer extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.nicktate.EventContainer)
      EventContainerOrBuilder {
    // Use EventContainer.newBuilder() to construct.
    private EventContainer(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private EventContainer() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private EventContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              com.nicktate.storm.PageviewProto.Pageview.Builder subBuilder = null;
              if (pageview_ != null) {
                subBuilder = pageview_.toBuilder();
              }
              pageview_ = input.readMessage(com.nicktate.storm.PageviewProto.Pageview.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pageview_);
                pageview_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.nicktate.storm.TransactionProto.Transaction.Builder subBuilder = null;
              if (transaction_ != null) {
                subBuilder = transaction_.toBuilder();
              }
              transaction_ = input.readMessage(com.nicktate.storm.TransactionProto.Transaction.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transaction_);
                transaction_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nicktate.storm.EventContainerProto.internal_static_com_nicktate_EventContainer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nicktate.storm.EventContainerProto.internal_static_com_nicktate_EventContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nicktate.storm.EventContainerProto.EventContainer.class, com.nicktate.storm.EventContainerProto.EventContainer.Builder.class);
    }

    public static final com.google.protobuf.Parser<EventContainer> PARSER =
        new com.google.protobuf.AbstractParser<EventContainer>() {
      public EventContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventContainer(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EventContainer> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code com.nicktate.EventContainer.EventType}
     */
    public enum EventType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PAGEVIEW = 0;</code>
       */
      PAGEVIEW(0, 0),
      /**
       * <code>TRANSACTION = 1;</code>
       */
      TRANSACTION(1, 1),
      UNRECOGNIZED(-1, -1),
      ;

      /**
       * <code>PAGEVIEW = 0;</code>
       */
      public static final int PAGEVIEW_VALUE = 0;
      /**
       * <code>TRANSACTION = 1;</code>
       */
      public static final int TRANSACTION_VALUE = 1;


      public final int getNumber() {
        if (index == -1) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      public static EventType valueOf(int value) {
        switch (value) {
          case 0: return PAGEVIEW;
          case 1: return TRANSACTION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EventType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EventType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EventType>() {
              public EventType findValueByNumber(int number) {
                return EventType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.nicktate.storm.EventContainerProto.EventContainer.getDescriptor().getEnumTypes().get(0);
      }

      private static final EventType[] VALUES = values();

      public static EventType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EventType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.nicktate.EventContainer.EventType)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional .com.nicktate.EventContainer.EventType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>optional .com.nicktate.EventContainer.EventType type = 1;</code>
     */
    public com.nicktate.storm.EventContainerProto.EventContainer.EventType getType() {
      com.nicktate.storm.EventContainerProto.EventContainer.EventType result = com.nicktate.storm.EventContainerProto.EventContainer.EventType.valueOf(type_);
      return result == null ? com.nicktate.storm.EventContainerProto.EventContainer.EventType.UNRECOGNIZED : result;
    }

    public static final int PAGEVIEW_FIELD_NUMBER = 2;
    private com.nicktate.storm.PageviewProto.Pageview pageview_;
    /**
     * <code>optional .com.nicktate.Pageview pageview = 2;</code>
     */
    public boolean hasPageview() {
      return pageview_ != null;
    }
    /**
     * <code>optional .com.nicktate.Pageview pageview = 2;</code>
     */
    public com.nicktate.storm.PageviewProto.Pageview getPageview() {
      return pageview_ == null ? com.nicktate.storm.PageviewProto.Pageview.getDefaultInstance() : pageview_;
    }
    /**
     * <code>optional .com.nicktate.Pageview pageview = 2;</code>
     */
    public com.nicktate.storm.PageviewProto.PageviewOrBuilder getPageviewOrBuilder() {
      return getPageview();
    }

    public static final int TRANSACTION_FIELD_NUMBER = 3;
    private com.nicktate.storm.TransactionProto.Transaction transaction_;
    /**
     * <code>optional .com.nicktate.Transaction transaction = 3;</code>
     */
    public boolean hasTransaction() {
      return transaction_ != null;
    }
    /**
     * <code>optional .com.nicktate.Transaction transaction = 3;</code>
     */
    public com.nicktate.storm.TransactionProto.Transaction getTransaction() {
      return transaction_ == null ? com.nicktate.storm.TransactionProto.Transaction.getDefaultInstance() : transaction_;
    }
    /**
     * <code>optional .com.nicktate.Transaction transaction = 3;</code>
     */
    public com.nicktate.storm.TransactionProto.TransactionOrBuilder getTransactionOrBuilder() {
      return getTransaction();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (type_ != com.nicktate.storm.EventContainerProto.EventContainer.EventType.PAGEVIEW.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (pageview_ != null) {
        output.writeMessage(2, getPageview());
      }
      if (transaction_ != null) {
        output.writeMessage(3, getTransaction());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.nicktate.storm.EventContainerProto.EventContainer.EventType.PAGEVIEW.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (pageview_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPageview());
      }
      if (transaction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTransaction());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.nicktate.storm.EventContainerProto.EventContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nicktate.storm.EventContainerProto.EventContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nicktate.storm.EventContainerProto.EventContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nicktate.storm.EventContainerProto.EventContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nicktate.storm.EventContainerProto.EventContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.nicktate.storm.EventContainerProto.EventContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.nicktate.storm.EventContainerProto.EventContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.nicktate.storm.EventContainerProto.EventContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.nicktate.storm.EventContainerProto.EventContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.nicktate.storm.EventContainerProto.EventContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.nicktate.storm.EventContainerProto.EventContainer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nicktate.EventContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.nicktate.EventContainer)
        com.nicktate.storm.EventContainerProto.EventContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nicktate.storm.EventContainerProto.internal_static_com_nicktate_EventContainer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nicktate.storm.EventContainerProto.internal_static_com_nicktate_EventContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nicktate.storm.EventContainerProto.EventContainer.class, com.nicktate.storm.EventContainerProto.EventContainer.Builder.class);
      }

      // Construct using com.nicktate.storm.EventContainerProto.EventContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (pageviewBuilder_ == null) {
          pageview_ = null;
        } else {
          pageview_ = null;
          pageviewBuilder_ = null;
        }
        if (transactionBuilder_ == null) {
          transaction_ = null;
        } else {
          transaction_ = null;
          transactionBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nicktate.storm.EventContainerProto.internal_static_com_nicktate_EventContainer_descriptor;
      }

      public com.nicktate.storm.EventContainerProto.EventContainer getDefaultInstanceForType() {
        return com.nicktate.storm.EventContainerProto.EventContainer.getDefaultInstance();
      }

      public com.nicktate.storm.EventContainerProto.EventContainer build() {
        com.nicktate.storm.EventContainerProto.EventContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.nicktate.storm.EventContainerProto.EventContainer buildPartial() {
        com.nicktate.storm.EventContainerProto.EventContainer result = new com.nicktate.storm.EventContainerProto.EventContainer(this);
        result.type_ = type_;
        if (pageviewBuilder_ == null) {
          result.pageview_ = pageview_;
        } else {
          result.pageview_ = pageviewBuilder_.build();
        }
        if (transactionBuilder_ == null) {
          result.transaction_ = transaction_;
        } else {
          result.transaction_ = transactionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nicktate.storm.EventContainerProto.EventContainer) {
          return mergeFrom((com.nicktate.storm.EventContainerProto.EventContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nicktate.storm.EventContainerProto.EventContainer other) {
        if (other == com.nicktate.storm.EventContainerProto.EventContainer.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasPageview()) {
          mergePageview(other.getPageview());
        }
        if (other.hasTransaction()) {
          mergeTransaction(other.getTransaction());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.nicktate.storm.EventContainerProto.EventContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.nicktate.storm.EventContainerProto.EventContainer) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>optional .com.nicktate.EventContainer.EventType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>optional .com.nicktate.EventContainer.EventType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.nicktate.EventContainer.EventType type = 1;</code>
       */
      public com.nicktate.storm.EventContainerProto.EventContainer.EventType getType() {
        com.nicktate.storm.EventContainerProto.EventContainer.EventType result = com.nicktate.storm.EventContainerProto.EventContainer.EventType.valueOf(type_);
        return result == null ? com.nicktate.storm.EventContainerProto.EventContainer.EventType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .com.nicktate.EventContainer.EventType type = 1;</code>
       */
      public Builder setType(com.nicktate.storm.EventContainerProto.EventContainer.EventType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.nicktate.EventContainer.EventType type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.nicktate.storm.PageviewProto.Pageview pageview_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.nicktate.storm.PageviewProto.Pageview, com.nicktate.storm.PageviewProto.Pageview.Builder, com.nicktate.storm.PageviewProto.PageviewOrBuilder> pageviewBuilder_;
      /**
       * <code>optional .com.nicktate.Pageview pageview = 2;</code>
       */
      public boolean hasPageview() {
        return pageviewBuilder_ != null || pageview_ != null;
      }
      /**
       * <code>optional .com.nicktate.Pageview pageview = 2;</code>
       */
      public com.nicktate.storm.PageviewProto.Pageview getPageview() {
        if (pageviewBuilder_ == null) {
          return pageview_ == null ? com.nicktate.storm.PageviewProto.Pageview.getDefaultInstance() : pageview_;
        } else {
          return pageviewBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.nicktate.Pageview pageview = 2;</code>
       */
      public Builder setPageview(com.nicktate.storm.PageviewProto.Pageview value) {
        if (pageviewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pageview_ = value;
          onChanged();
        } else {
          pageviewBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .com.nicktate.Pageview pageview = 2;</code>
       */
      public Builder setPageview(
          com.nicktate.storm.PageviewProto.Pageview.Builder builderForValue) {
        if (pageviewBuilder_ == null) {
          pageview_ = builderForValue.build();
          onChanged();
        } else {
          pageviewBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .com.nicktate.Pageview pageview = 2;</code>
       */
      public Builder mergePageview(com.nicktate.storm.PageviewProto.Pageview value) {
        if (pageviewBuilder_ == null) {
          if (pageview_ != null) {
            pageview_ =
              com.nicktate.storm.PageviewProto.Pageview.newBuilder(pageview_).mergeFrom(value).buildPartial();
          } else {
            pageview_ = value;
          }
          onChanged();
        } else {
          pageviewBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .com.nicktate.Pageview pageview = 2;</code>
       */
      public Builder clearPageview() {
        if (pageviewBuilder_ == null) {
          pageview_ = null;
          onChanged();
        } else {
          pageview_ = null;
          pageviewBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .com.nicktate.Pageview pageview = 2;</code>
       */
      public com.nicktate.storm.PageviewProto.Pageview.Builder getPageviewBuilder() {
        
        onChanged();
        return getPageviewFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.nicktate.Pageview pageview = 2;</code>
       */
      public com.nicktate.storm.PageviewProto.PageviewOrBuilder getPageviewOrBuilder() {
        if (pageviewBuilder_ != null) {
          return pageviewBuilder_.getMessageOrBuilder();
        } else {
          return pageview_ == null ?
              com.nicktate.storm.PageviewProto.Pageview.getDefaultInstance() : pageview_;
        }
      }
      /**
       * <code>optional .com.nicktate.Pageview pageview = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.nicktate.storm.PageviewProto.Pageview, com.nicktate.storm.PageviewProto.Pageview.Builder, com.nicktate.storm.PageviewProto.PageviewOrBuilder> 
          getPageviewFieldBuilder() {
        if (pageviewBuilder_ == null) {
          pageviewBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.nicktate.storm.PageviewProto.Pageview, com.nicktate.storm.PageviewProto.Pageview.Builder, com.nicktate.storm.PageviewProto.PageviewOrBuilder>(
                  getPageview(),
                  getParentForChildren(),
                  isClean());
          pageview_ = null;
        }
        return pageviewBuilder_;
      }

      private com.nicktate.storm.TransactionProto.Transaction transaction_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.nicktate.storm.TransactionProto.Transaction, com.nicktate.storm.TransactionProto.Transaction.Builder, com.nicktate.storm.TransactionProto.TransactionOrBuilder> transactionBuilder_;
      /**
       * <code>optional .com.nicktate.Transaction transaction = 3;</code>
       */
      public boolean hasTransaction() {
        return transactionBuilder_ != null || transaction_ != null;
      }
      /**
       * <code>optional .com.nicktate.Transaction transaction = 3;</code>
       */
      public com.nicktate.storm.TransactionProto.Transaction getTransaction() {
        if (transactionBuilder_ == null) {
          return transaction_ == null ? com.nicktate.storm.TransactionProto.Transaction.getDefaultInstance() : transaction_;
        } else {
          return transactionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.nicktate.Transaction transaction = 3;</code>
       */
      public Builder setTransaction(com.nicktate.storm.TransactionProto.Transaction value) {
        if (transactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transaction_ = value;
          onChanged();
        } else {
          transactionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .com.nicktate.Transaction transaction = 3;</code>
       */
      public Builder setTransaction(
          com.nicktate.storm.TransactionProto.Transaction.Builder builderForValue) {
        if (transactionBuilder_ == null) {
          transaction_ = builderForValue.build();
          onChanged();
        } else {
          transactionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .com.nicktate.Transaction transaction = 3;</code>
       */
      public Builder mergeTransaction(com.nicktate.storm.TransactionProto.Transaction value) {
        if (transactionBuilder_ == null) {
          if (transaction_ != null) {
            transaction_ =
              com.nicktate.storm.TransactionProto.Transaction.newBuilder(transaction_).mergeFrom(value).buildPartial();
          } else {
            transaction_ = value;
          }
          onChanged();
        } else {
          transactionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .com.nicktate.Transaction transaction = 3;</code>
       */
      public Builder clearTransaction() {
        if (transactionBuilder_ == null) {
          transaction_ = null;
          onChanged();
        } else {
          transaction_ = null;
          transactionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .com.nicktate.Transaction transaction = 3;</code>
       */
      public com.nicktate.storm.TransactionProto.Transaction.Builder getTransactionBuilder() {
        
        onChanged();
        return getTransactionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.nicktate.Transaction transaction = 3;</code>
       */
      public com.nicktate.storm.TransactionProto.TransactionOrBuilder getTransactionOrBuilder() {
        if (transactionBuilder_ != null) {
          return transactionBuilder_.getMessageOrBuilder();
        } else {
          return transaction_ == null ?
              com.nicktate.storm.TransactionProto.Transaction.getDefaultInstance() : transaction_;
        }
      }
      /**
       * <code>optional .com.nicktate.Transaction transaction = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.nicktate.storm.TransactionProto.Transaction, com.nicktate.storm.TransactionProto.Transaction.Builder, com.nicktate.storm.TransactionProto.TransactionOrBuilder> 
          getTransactionFieldBuilder() {
        if (transactionBuilder_ == null) {
          transactionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.nicktate.storm.TransactionProto.Transaction, com.nicktate.storm.TransactionProto.Transaction.Builder, com.nicktate.storm.TransactionProto.TransactionOrBuilder>(
                  getTransaction(),
                  getParentForChildren(),
                  isClean());
          transaction_ = null;
        }
        return transactionBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.nicktate.EventContainer)
    }

    // @@protoc_insertion_point(class_scope:com.nicktate.EventContainer)
    private static final com.nicktate.storm.EventContainerProto.EventContainer defaultInstance;static {
      defaultInstance = new com.nicktate.storm.EventContainerProto.EventContainer();
    }

    public static com.nicktate.storm.EventContainerProto.EventContainer getDefaultInstance() {
      return defaultInstance;
    }

    public com.nicktate.storm.EventContainerProto.EventContainer getDefaultInstanceForType() {
      return defaultInstance;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nicktate_EventContainer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nicktate_EventContainer_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!models/proto/eventContainer.proto\022\014com" +
      ".nicktate\032\033models/proto/pageview.proto\032\036" +
      "models/proto/transaction.proto\"\314\001\n\016Event" +
      "Container\0224\n\004type\030\001 \001(\0162&.com.nicktate.E" +
      "ventContainer.EventType\022(\n\010pageview\030\002 \001(" +
      "\0132\026.com.nicktate.Pageview\022.\n\013transaction" +
      "\030\003 \001(\0132\031.com.nicktate.Transaction\"*\n\tEve" +
      "ntType\022\014\n\010PAGEVIEW\020\000\022\017\n\013TRANSACTION\020\001B)\n" +
      "\022com.nicktate.stormB\023EventContainerProto" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.nicktate.storm.PageviewProto.getDescriptor(),
          com.nicktate.storm.TransactionProto.getDescriptor(),
        }, assigner);
    internal_static_com_nicktate_EventContainer_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_nicktate_EventContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_nicktate_EventContainer_descriptor,
        new java.lang.String[] { "Type", "Pageview", "Transaction", });
    com.nicktate.storm.PageviewProto.getDescriptor();
    com.nicktate.storm.TransactionProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
